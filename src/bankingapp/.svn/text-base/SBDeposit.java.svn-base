/*
 * SBNew.java
 *
 * Created on June 1, 2010, 10:22 PM
 */
package bankingapp;

import java.beans.PropertyVetoException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.jdesktop.application.Action;

/**
 *
 * @author  s
 */
public class SBDeposit extends javax.swing.JInternalFrame {

    private EntityManager BankingPUEntityManager;
    private double interest;
    private Integer sbSchemeId;

    /** Creates new form SBNew */
    public SBDeposit() {
        initComponents();
        BankingPUEntityManager = javax.persistence.Persistence.createEntityManagerFactory("BankingAppPU").createEntityManager();
        Query schemeId = BankingPUEntityManager.createQuery("SELECT s.id from Schemes s where s.scheme = 'SB'");
        Integer id = (Integer) schemeId.getSingleResult();
        sbSchemeId = id;
        ActivityByMember am = ActivityByMember.getInstance();
        if(am!=null){
            Members m = am.getMember();
            if(m!=null){
                pkText.setText(m.getUsername());
                pkTextKeyReleased1(null);
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        criteriaCombo = new javax.swing.JComboBox();
        pkText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        detailsLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        amountText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        accountsCombo = new javax.swing.JComboBox();

        setClosable(true);
        setResizable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(bankingapp.BankingApp.class).getContext().getResourceMap(SBDeposit.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        criteriaCombo.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        criteriaCombo.setModel(new DefaultComboBoxModel(UserTypeComboItem.constructMenuItem()));
        criteriaCombo.setName("criteriaCombo"); // NOI18N

        pkText.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        pkText.setName("pkText"); // NOI18N
        pkText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pkTextKeyReleased(evt);
                pkTextKeyReleased1(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(bankingapp.BankingApp.class).getContext().getActionMap(SBDeposit.class, this);
        jButton1.setAction(actionMap.get("makeWithdraw")); // NOI18N
        jButton1.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        detailsLabel.setName("detailsLabel"); // NOI18N

        jLabel1.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        amountText.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        amountText.setName("amountText"); // NOI18N

        jLabel7.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        accountsCombo.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        accountsCombo.setName("accountsCombo"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(criteriaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(accountsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(amountText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pkText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))
                        .addGap(50, 50, 50)
                        .addComponent(detailsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(criteriaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pkText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(detailsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(accountsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(amountText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(76, 76, 76)
                .addComponent(jButton1)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void pkTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pkTextKeyReleased
    // TODO add your handling code here:
}//GEN-LAST:event_pkTextKeyReleased

    private void pkTextKeyReleased1(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pkTextKeyReleased1
        List l = getUser();
        if (l.size() != 0) {
            jButton1.setEnabled(true);
            Members m = (Members) l.get(0);
            detailsLabel.setText("<html>Username :" + m.getUsername() + " <br /> Membership No. :" + m.getNumber() + " </html>");
            List<Accounts> l1;
            String sql = "SELECT a FROM Accounts a WHERE a.memberId=" + m.getId() + " AND a.schemeId = " + sbSchemeId + " AND a.closed=0";
            Query q = BankingPUEntityManager.createQuery(sql);
            l1 = q.getResultList();
            accountsCombo.removeAllItems();
            accountsCombo.setModel(new DefaultComboBoxModel(l1.toArray()));
            //balanceLabel.setText("Balance :"+Utils.getSBAccountBalance(((Accounts)accountsCombo.getSelectedItem()).getId()));
                        
        } else {
            accountsCombo.removeAllItems();
            jButton1.setEnabled(false);
            //balanceLabel.setText("");
        }
    }//GEN-LAST:event_pkTextKeyReleased1

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

    }//GEN-LAST:event_jButton1ActionPerformed

    
    List getUser() {
        Query q = BankingPUEntityManager.createQuery("SELECT m  FROM Members m where m." + ((UserTypeComboItem) criteriaCombo.getSelectedItem()).getColumn() + " = '" + pkText.getText().trim() + "'");
        List l = q.getResultList();
        return l;
    }
    
    @Action
    public void makeWithdraw() {
        try {
            List l = getUser();
            if (l.size() == 0) {
                JOptionPane.showMessageDialog(this, "Member Not Found !", "Attention", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if(accountsCombo.getSelectedIndex()==-1){
                JOptionPane.showMessageDialog(this, "Account Not Found !", "Attention", JOptionPane.ERROR_MESSAGE);
                return;
            }
           
            Transactions t = new Transactions();
            Members m = (Members) l.get(0);
            t.setAccountId(((Accounts) accountsCombo.getSelectedItem()).getId());
            t.setUserId(m.getId());
            t.setDeposit(Double.parseDouble(amountText.getText()));
            int ledgerHead=((LedgerHeads)Utils.getLedgerHead("SB")).getId();
            t.setLledgerHeadId(ledgerHead);
           
            BankingPUEntityManager.getTransaction().begin();
            BankingPUEntityManager.persist(t);
           
            BankingPUEntityManager.getTransaction().commit();
            //System.out.print(ledgerHead);
            JOptionPane.showMessageDialog(this, "Deposit Successful", "Done", JOptionPane.INFORMATION_MESSAGE);
            this.setClosed(true);
            int resp = JOptionPane.showConfirmDialog(this, "Do you want to add this to print ?");
            if (resp == JOptionPane.YES_OPTION) {
                String[] p = {"Savings Bank", amountText.getText().trim()};
                 PrintDemon.getInstance().reciepts.add(p);
            }    
        } catch (PropertyVetoException ex) {
            Logger.getLogger(SBDeposit.class.getName()).log(Level.SEVERE, null, ex);
        }catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Please Enter a valid amount !", "Attention", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(SBDeposit.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(SBDeposit.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox accountsCombo;
    private javax.swing.JTextField amountText;
    private javax.swing.JComboBox criteriaCombo;
    private javax.swing.JLabel detailsLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField pkText;
    // End of variables declaration//GEN-END:variables
}
