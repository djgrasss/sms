/*
 * LoanRepayment.java
 *
 * Created on July 16, 2010, 7:13 PM
 */
package bankingapp;

import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author  s
 */
public class LoanRepayment extends javax.swing.JInternalFrame {

    private EntityManager BankingPUEntityManager;
    private int loanSchemeId;
    private LedgerHeads ledgerHeadLoan = null;
    private boolean fromSuspense=false;
    
    /** Creates new form LoanRepayment */
    public LoanRepayment() {
        initComponents();
        ledgerHeadLoan = Utils.getLedgerHead("Loan");
        BankingPUEntityManager = javax.persistence.Persistence.createEntityManagerFactory("BankingAppPU").createEntityManager();
        jComboBox2.setModel(new DefaultComboBoxModel(getLoanSchemes()));
        ActivityByMember am = ActivityByMember.getInstance();
        if (am != null) {
            Members m = am.getMember();
            if (m != null) {
                pkText.setText(m.getUsername());
                pkTextKeyReleased1(null);
            }
        }
    }

    private Schemes[] getLoanSchemes() {
        Schemes[] schemes = null;
        String sql = "SELECT s FROM Schemes s WHERE s.scheme='Long Term Loan' or s.scheme='Short Term Loan' or s.scheme='MDS Loan' or s.scheme='PS Loan' or s.scheme='HP Loan'";
        Query q = BankingPUEntityManager.createQuery(sql);
        List<Schemes> l = q.getResultList();
        int i = 0;
        schemes = new Schemes[l.size()];
        for (Iterator<Schemes> it = l.iterator(); it.hasNext();) {
            Schemes schemes1 = it.next();
            schemes[i++] = schemes1;
        }
        return schemes;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        criteriaCombo = new javax.swing.JComboBox();
        pkText = new javax.swing.JTextField();
        detailsLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        amountText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        interestText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        daysText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        dueText = new javax.swing.JTextField();
        percentText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        totalText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        suspanceButton = new javax.swing.JButton();

        setClosable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(bankingapp.BankingApp.class).getContext().getResourceMap(LoanRepayment.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        criteriaCombo.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        criteriaCombo.setModel(new DefaultComboBoxModel(UserTypeComboItem.constructMenuItem()));
        criteriaCombo.setName("criteriaCombo"); // NOI18N
        criteriaCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criteriaComboActionPerformed(evt);
            }
        });

        pkText.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        pkText.setName("pkText"); // NOI18N
        pkText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pkTextKeyReleased(evt);
                pkTextKeyReleased1(evt);
            }
        });

        detailsLabel.setName("detailsLabel"); // NOI18N

        jButton1.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        amountText.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        amountText.setText(resourceMap.getString("amountText.text")); // NOI18N
        amountText.setName("amountText"); // NOI18N
        amountText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                amountTextKeyReleased(evt);
            }
        });

        jLabel2.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        interestText.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        interestText.setText(resourceMap.getString("interestText.text")); // NOI18N
        interestText.setName("interestText"); // NOI18N
        interestText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                interestTextKeyReleased(evt);
            }
        });

        jLabel3.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jComboBox1.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jComboBox1.setName("jComboBox1"); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jComboBox2.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jComboBox2.setName("jComboBox2"); // NOI18N
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        daysText.setEditable(false);
        daysText.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        daysText.setText(resourceMap.getString("daysText.text")); // NOI18N
        daysText.setName("daysText"); // NOI18N

        jLabel5.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel6.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        dueText.setEditable(false);
        dueText.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        dueText.setText(resourceMap.getString("dueText.text")); // NOI18N
        dueText.setName("dueText"); // NOI18N

        percentText.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        percentText.setText(resourceMap.getString("percentText.text")); // NOI18N
        percentText.setName("percentText"); // NOI18N
        percentText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                percentTextActionPerformed(evt);
            }
        });
        percentText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                percentTextKeyReleased(evt);
            }
        });

        jLabel7.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        totalText.setEditable(false);
        totalText.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        totalText.setText(resourceMap.getString("totalText.text")); // NOI18N
        totalText.setName("totalText"); // NOI18N

        jLabel8.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        suspanceButton.setText(resourceMap.getString("suspanceButton.text")); // NOI18N
        suspanceButton.setName("suspanceButton"); // NOI18N
        suspanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suspanceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(criteriaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel6)))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(301, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dueText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                                    .addComponent(pkText, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))
                                .addGap(50, 50, 50)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(detailsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(suspanceButton)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(daysText, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(percentText, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)))
                        .addGap(10, 10, 10))))
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(totalText, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(amountText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                                .addComponent(interestText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                            .addGap(186, 186, 186)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(detailsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(criteriaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pkText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(146, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(140, Short.MAX_VALUE)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(daysText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(percentText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(dueText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amountText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(suspanceButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(interestText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void pkTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pkTextKeyReleased
    // TODO add your handling code here:
    }//GEN-LAST:event_pkTextKeyReleased

    List getUser() {
        Query q = BankingPUEntityManager.createQuery("SELECT m  FROM Members m where m." + ((UserTypeComboItem) criteriaCombo.getSelectedItem()).getColumn() + " = '" + pkText.getText().trim() + "'");
        List l = q.getResultList();
        return l;
    }

    private void pkTextKeyReleased1(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pkTextKeyReleased1
        List l = getUser();
        if (l.size() != 0) {
            jButton1.setEnabled(true);
            Members m = (Members) l.get(0);
            detailsLabel.setText("<html>Username :" + m.getUsername() + " <br /> Membership No. :" + m.getNumber() + " </html>");
            List<Accounts> l1;
            String sql = "SELECT a FROM Accounts a WHERE a.memberId=" + m.getId() + " AND a.schemeId = " + ((Schemes) jComboBox2.getSelectedItem()).getId() + " AND a.closed=0";
            System.out.println(sql);
            Query q = BankingPUEntityManager.createQuery(sql);
            l1 = q.getResultList();
            DefaultComboBoxModel dcm = new DefaultComboBoxModel(l1.toArray());
            jComboBox1.setModel(dcm);
            jComboBox1ActionPerformed(null);
            populateDue();
        } else {
            DefaultComboBoxModel dcm = new DefaultComboBoxModel();
            jComboBox1.setModel(dcm);

            jButton1.setEnabled(false);
        }
    }//GEN-LAST:event_pkTextKeyReleased1

    private void criteriaComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criteriaComboActionPerformed
    // TODO add your handling code here:
    }//GEN-LAST:event_criteriaComboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Accounts account = (Accounts) jComboBox1.getSelectedItem();
        String queryTotalPrincipal = "SELECT SUM(t.deposit) FROM Transactions t WHERE t.accountId =" + account.getId();
        System.out.println(queryTotalPrincipal);
        Query totalPrincipalQuery = BankingPUEntityManager.createQuery(queryTotalPrincipal);
        Double total = (Double) totalPrincipalQuery.getSingleResult();
        String queryAmountPaid = "SELECT SUM(t.withdrawal) FROM Transactions t WHERE t.accountId =" + account.getId();
        Query amountPaidQuery = BankingPUEntityManager.createQuery(queryAmountPaid);
        Double amountPaid = (Double) amountPaidQuery.getSingleResult();
        System.out.println(total + " of " + amountPaid);
        Double amount = 0d;
        Double interest = 0d;
        try {
            amount = Double.parseDouble(amountText.getText().trim());
            interest = Double.parseDouble(interestText.getText().trim());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "NUmber format error", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        Transactions t = new Transactions();
        t.setAccountId(account.getId());
        t.setDeposit(amount);
        t.setLledgerHeadId(Utils.getLedgerHead("Loan").getId());
        List l = getUser();
        Members m = null;
        if (l.size() != 0) {
            //   jButton1.setEnabled(true);
            m = (Members) l.get(0);
        }
        t.setUserId(m.getId());
        Transactions tt = new Transactions();
        tt.setAccountId(account.getId());
        tt.setDeposit(interest);
        tt.setLledgerHeadId(Utils.getLedgerHead("Loan Interest").getId());
        tt.setUserId(m.getId());
        BankingPUEntityManager.getTransaction().begin();
        BankingPUEntityManager.persist(t);
        BankingPUEntityManager.persist(tt);
        BankingPUEntityManager.getTransaction().commit();
        if (total != null && amountPaid != null && total + amount > amountPaid) {
            String closeAccountSql = "UPDATE Accounts a SET a.closed=1 where a.id = " + account.getId();
            Query closeAccountQuery = BankingPUEntityManager.createQuery(closeAccountSql);
            BankingPUEntityManager.getTransaction().begin();
            closeAccountQuery.executeUpdate();
            BankingPUEntityManager.getTransaction().commit();
            JOptionPane.showMessageDialog(this, "Payment Completed . Account to be closed");
        } else {
            JOptionPane.showMessageDialog(this, "Payment Completed ");
        }
        int resp = JOptionPane.showConfirmDialog(this, "Do you want to add this to print ?");
        if (resp == JOptionPane.YES_OPTION) {
            String[] p = {"Loan Repayment", amountText.getText().trim()};
            PrintDemon.getInstance().reciepts.add(p);

            try {
                Accounts a = (Accounts) jComboBox1.getSelectedItem();
                String sql = "select sum(withdrawal)-COALESCE(sum(deposit),0) from transactions where account_id = " + a.getId() + " and lledger_head_id = " + ledgerHeadLoan.getId();
                Query q = BankingPUEntityManager.createNativeQuery(sql);
                String[] p2 = {"Due Amount: " + ((Vector) q.getSingleResult()).get(0).toString(), ""};
                PrintDemon.getInstance().reciepts.add(p2);
            //dueText.setText(((Vector) q.getSingleResult()).get(0).toString());
            } catch (Exception e) {
                //dueText.setText("");
                e.printStackTrace();
            }

            String[] p1 = {"Loan Interest", amountText.getText().trim()};
            PrintDemon.getInstance().reciepts.add(p1);
        }
        // suspance stuff
        if (fromSuspense) {
            Transactions t1 = new Transactions();
            try {
                List l1 = getUser();
                Members m1 = null;
                if (l1.size() != 0) {
                    m1 = (Members) l1.get(0);
                }
                t1.setWithdrawal(Double.parseDouble(amountText.getText().trim()));
                t1.setUserId(m1.getId());
                LedgerHeads lh = Utils.getLedgerHead("Suspense Account");
                t1.setLledgerHeadId(lh.getId());
                BankingPUEntityManager.getTransaction().begin();
                BankingPUEntityManager.persist(t1);
                BankingPUEntityManager.getTransaction().commit();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        try {
            this.setClosed(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void populateNoOfDays() {
        Accounts a = (Accounts) jComboBox1.getSelectedItem();
        String sql = "select datediff(now(),max(`timestamp`)) from transactions where transactions.account_id = " + a.getId();
        Query q = BankingPUEntityManager.createNativeQuery(sql);
        Long val = (Long) ((Vector) q.getSingleResult()).get(0);
        daysText.setText(val.toString());
    }

    private void populateDue() {
        try {
            Accounts a = (Accounts) jComboBox1.getSelectedItem();
            String sql = "select sum(withdrawal)-COALESCE(sum(deposit),0) from transactions where account_id = " + a.getId() + " and lledger_head_id = " + ledgerHeadLoan.getId();
            System.out.println(sql);
            Query q = BankingPUEntityManager.createNativeQuery(sql);
            dueText.setText(((Vector) q.getSingleResult()).get(0).toString());
        } catch (Exception e) {
            dueText.setText("");
            e.printStackTrace();
        }
    }

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        try {
            pkTextKeyReleased1(null);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        populateNoOfDays();
        populateDue();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void percentTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_percentTextActionPerformed
    // TODO add your handling code here:
        
    }//GEN-LAST:event_percentTextActionPerformed

    private void percentTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_percentTextKeyReleased
        // TODO add your handling code here:
        interestText.setText(calculateInterest() + "");
    }//GEN-LAST:event_percentTextKeyReleased

    private void interestTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_interestTextKeyReleased
        // TODO add your handling code here:
        populateSum();
    }//GEN-LAST:event_interestTextKeyReleased

    private void amountTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountTextKeyReleased
        // TODO add your handling code here:
        populateSum();
    }//GEN-LAST:event_amountTextKeyReleased

    private void suspanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suspanceButtonActionPerformed
        // TODO add your handling code here:
        suspanceProcess();
    }//GEN-LAST:event_suspanceButtonActionPerformed

    float calculateInterest() {
        float interest = 0f;
        try {
            float due = Float.parseFloat(dueText.getText());
            float percent = Float.parseFloat(percentText.getText());
            int days = Integer.parseInt(daysText.getText());
            interest = (due * percent * days) / (365 * 100);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return interest;
    }

    void suspanceProcess() {
        suspanceButton.setVisible(false);

        try {
            List l = getUser();
            Members m = null;
            if (l.size() != 0) {
                m = (Members) l.get(0);
                LedgerHeads lh = Utils.getLedgerHead("Suspense Account");
                String balanceQuery = "select round(ifnull(sum(deposit),0)-ifnull(sum(withdrawal),0),2) from transactions where transactions.lledger_head_id = " + lh.getId() + " and transactions.user_id=" + m.getId();
                Query q = BankingPUEntityManager.createNativeQuery(balanceQuery);
                Double amt = (Double) ((Vector) q.getSingleResult()).get(0);
                int s = JOptionPane.showConfirmDialog(this, "Account balance " + amt.toString() + ". Amount to withdraw:" + amountText.getText() + ". Continue ?");
                if (s == JOptionPane.YES_OPTION) {
                    if (Double.parseDouble(amountText.getText()) > amt) {
                        JOptionPane.showMessageDialog(this, "Sufficent Suspance balance not available", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        fromSuspense = true;
                    }
                }
                if (s == JOptionPane.NO_OPTION) {
                    fromSuspense = false;
                    suspanceButton.setVisible(true);
                }
            //accountBalanceLabel.setText();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void populateSum() {
        float principal = 0f;
        float interest = 0f;
        try {
            principal = Float.parseFloat(amountText.getText().trim());
            interest = Float.parseFloat(interestText.getText().trim());
        } catch (Exception e) {
            e.printStackTrace();
        }
        totalText.setText(principal + interest + "");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountText;
    private javax.swing.JComboBox criteriaCombo;
    private javax.swing.JTextField daysText;
    private javax.swing.JLabel detailsLabel;
    private javax.swing.JTextField dueText;
    private javax.swing.JTextField interestText;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField percentText;
    private javax.swing.JTextField pkText;
    private javax.swing.JButton suspanceButton;
    private javax.swing.JTextField totalText;
    // End of variables declaration//GEN-END:variables
}
