/*
 * LoanIssue.java
 *
 * Created on July 16, 2010, 3:56 PM
 */

package bankingapp;

import bankingapp.Members;
import bankingapp.LedgerHeads;
import bankingapp.TransactionDetails;
import bankingapp.Transactions;
import bankingapp.MdsDetails;
import bankingapp.Mds;
import bankingapp.utils.DoubleVerifier;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author  s
 */
public class MDSWin extends javax.swing.JInternalFrame {
    private EntityManager BankingPUEntityManager;
    private DefaultComboBoxModel dcm;
    /** Creates new form LoanIssue */
    public MDSWin() {
        dcm = new DefaultComboBoxModel();
        initComponents();
        BankingPUEntityManager = javax.persistence.Persistence.createEntityManagerFactory("BankingAppPU").createEntityManager();
        
        jComboBox2.setModel(dcm);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        buttonGroup1 = new javax.swing.ButtonGroup();
        BankingAppPUEntityManager = javax.persistence.Persistence.createEntityManagerFactory("BankingAppPU").createEntityManager();
        ledgerHeadsQuery = BankingAppPUEntityManager.createQuery("SELECT l FROM LedgerHeads l");
        ledgerHeadsList = ledgerHeadsQuery.getResultList();
        ledgerHeadsQuery1 = BankingAppPUEntityManager.createQuery("SELECT l FROM LedgerHeads l");
        ledgerHeadsList1 = ledgerHeadsQuery1.getResultList();
        mdsQuery = BankingAppPUEntityManager.createQuery("SELECT m FROM Mds m");
        mdsList = mdsQuery.getResultList();
        jLabel6 = new javax.swing.JLabel();
        criteriaCombo = new javax.swing.JComboBox();
        pkText = new javax.swing.JTextField();
        detailsLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        amountText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        advanceAmount = new javax.swing.JTextField();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(bankingapp.BankingApp.class).getContext().getResourceMap(MDSWin.class);
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        setClosable(true);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        criteriaCombo.setModel(new DefaultComboBoxModel(UserTypeComboItem.constructMenuItem()));
        criteriaCombo.setName("criteriaCombo"); // NOI18N

        pkText.setName("pkText"); // NOI18N
        pkText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pkTextKeyReleased(evt);
                pkTextKeyReleased1(evt);
            }
        });

        detailsLabel.setName("detailsLabel"); // NOI18N

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        amountText.setText(resourceMap.getString("amountText.text")); // NOI18N
        amountText.setInputVerifier(new DoubleVerifier());
        amountText.setName("amountText"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jComboBox1.setName("jComboBox1"); // NOI18N

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, mdsList, jComboBox1);
        bindingGroup.addBinding(jComboBoxBinding);

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jComboBox2.setName("jComboBox2"); // NOI18N
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        advanceAmount.setText(resourceMap.getString("advanceAmount.text")); // NOI18N
        advanceAmount.setName("advanceAmount"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(criteriaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addContainerGap())
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(amountText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                                    .addComponent(pkText, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                                    .addComponent(advanceAmount, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))
                                .addGap(50, 50, 50)
                                .addComponent(detailsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pkText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(detailsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(criteriaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amountText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(advanceAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(31, 31, 31))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void pkTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pkTextKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_pkTextKeyReleased
    List getUser(){
        Query q = BankingPUEntityManager.createQuery("SELECT m  FROM Members m where m."+((UserTypeComboItem)criteriaCombo.getSelectedItem()).getColumn()+" = '"+pkText.getText().trim()+"'");
        List l = q.getResultList();
        return l;
    }
    private void pkTextKeyReleased1(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pkTextKeyReleased1
        List l = getUser();
        if(l.size()!=0){
            jButton1.setEnabled(true);
            Members m = (Members) l.get(0);
            detailsLabel.setText("<html>Username :"+m.getUsername()+" <br /> Membership No. :"+m.getNumber()+" </html>");
        } else{
            jButton1.setEnabled(false);
        }
    }//GEN-LAST:event_pkTextKeyReleased1

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        boolean persistAdvance = false;
        Transactions t = new Transactions();
        Transactions tcomm = new Transactions();
        Transactions tadvDue = new Transactions();
        Mds mds = (Mds) jComboBox1.getSelectedItem();
        List l = getUser();
        if(l.size()!=0){
         
            Members m = (Members) l.get(0);
            t.setUserId(m.getId());
            tadvDue.setUserId(m.getId());
        }    
        double amount = Double.parseDouble(amountText.getText().trim());
        double commission =0.0d;
        /*if(commissonText.getText().trim().length()!=0){
            commission= Double.parseDouble(commissonText.getText().trim());
        }*/
        if(advanceAmount.getText().trim().length()!=0){
            persistAdvance = true;
            double adv = Double.parseDouble(advanceAmount.getText().trim());
            tadvDue.setWithdrawal(adv);
        }
            t.setWithdrawal(amount);
        //    tcomm.setDeposit(commission);
        LedgerHeads lh = Utils.getLedgerHead("MDS");//mds scheme to be added and commission to be added-done
        LedgerHeads lhAdv = Utils.getLedgerHead("MDS Advance Due To");
        tadvDue.setLledgerHeadId(lhAdv.getId());
//        LedgerHeads lhComm = Utils.getLedgerHead("MDS Commission");
        if(lh==null){
            return;
        }
        Query quser = BankingAppPUEntityManager.createNamedQuery("Members.findByNumber");
        quser.setParameter("number", "society");
        //Members mem = (Members) quser.getSingleResult();
        //tcomm.setUserId(mem.getId());
        t.setLledgerHeadId(lh.getId());
        //tcomm.setLledgerHeadId(lhComm.getId());
        BankingAppPUEntityManager.getTransaction().begin();
        BankingAppPUEntityManager.persist(t);
        if(persistAdvance){
            BankingAppPUEntityManager.persist(tadvDue);
        }
        BankingAppPUEntityManager.getTransaction().commit();
        TransactionDetails td = new TransactionDetails();
        td.setRemarks(mds.getName()+"(#"+jComboBox2.getSelectedItem().toString()+")");
        td.setTransactionId(Utils.getMaxId("transactions"));
         BankingAppPUEntityManager.getTransaction().begin();
        BankingAppPUEntityManager.persist(td);
        BankingAppPUEntityManager.getTransaction().commit();
        
        /*BankingAppPUEntityManager.getTransaction().begin();
        BankingAppPUEntityManager.persist(tcomm);
        BankingAppPUEntityManager.getTransaction().commit();*/
        /*TransactionDetails td1 = new TransactionDetails();
        td1.setRemarks(mds.getName()+"(#"+jComboBox2.getSelectedItem().toString()+")");
        td1.setTransactionId(Utils.getMaxId("transactions"));
         BankingAppPUEntityManager.getTransaction().begin();
        BankingAppPUEntityManager.persist(td1);
        BankingAppPUEntityManager.getTransaction().commit();*/
        
        JOptionPane.showMessageDialog(this,"Transaction has been made");
        try{
            this.setClosed(true);
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        populateInstallments();
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        populateAmountText();
    }//GEN-LAST:event_jComboBox2ActionPerformed
    void populateAmountText(){
        MdsDetails mdsd = (MdsDetails) jComboBox2.getSelectedItem();
        String sql ="SELECT sum(deposit) as sumDep FROM mds_payments m, transactions t, user_mds u WHERE t.id=m.transactions_id AND u.id=m.user_mds_id AND m.`mds_details_id`="+mdsd.getId();
        System.out.println(sql);
        BankingAppPUEntityManager.getTransaction().begin();
        Query q  = BankingAppPUEntityManager.createNativeQuery(sql);
        Double sumPay = (Double) ((Vector)q.getSingleResult()).get(0);
        BankingAppPUEntityManager.getTransaction().commit();
        System.out.println("mds det-"+mdsd.toString());
        amountText.setText(mdsd.getAmount().toString());
        Double toPay = mdsd.getAmount();
        if(sumPay!=null){
            advanceAmount.setText((toPay-sumPay)<0?"":(toPay-sumPay)+"");
        }
        else{
            advanceAmount.setText("");
        }
    }
    void populateInstallments(){
        Mds mds = (Mds) jComboBox1.getSelectedItem();
        if(mds==null){
            return;
        }
        Query q = BankingAppPUEntityManager.createQuery("SELECT m FROM MdsDetails m WHERE m.mdsId="+mds.getId()+" ORDER BY m.installment ");
        List l = q.getResultList();
        dcm= new DefaultComboBoxModel();
        jComboBox2.setModel(dcm);
        for (Iterator it = l.iterator(); it.hasNext();) {
            Object object = it.next();
            dcm.addElement(object);
        }

    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager BankingAppPUEntityManager;
    private javax.swing.JTextField advanceAmount;
    private javax.swing.JTextField amountText;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox criteriaCombo;
    private javax.swing.JLabel detailsLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private java.util.List<bankingapp.LedgerHeads> ledgerHeadsList;
    private java.util.List<bankingapp.LedgerHeads> ledgerHeadsList1;
    private javax.persistence.Query ledgerHeadsQuery;
    private javax.persistence.Query ledgerHeadsQuery1;
    private java.util.List<bankingapp.Mds> mdsList;
    private javax.persistence.Query mdsQuery;
    private javax.swing.JTextField pkText;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    
}
