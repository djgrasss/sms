/*
 * SBNew.java
 *
 * Created on June 1, 2010, 10:22 PM
 */
package bankingapp;

import bankingapp.Accounts;
import bankingapp.Members;
import bankingapp.LedgerHeads;
import bankingapp.Transactions;
import java.beans.PropertyVetoException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import org.jdesktop.application.Action;

/**
 *
 * @author  s
 */
public class FDWithdraw extends javax.swing.JInternalFrame {

    private EntityManager BankingPUEntityManager;
    private double interest;
    private Integer sbSchemeId;

    /** Creates new form SBNew */
    public FDWithdraw() {
        initComponents();
        BankingPUEntityManager = javax.persistence.Persistence.createEntityManagerFactory("BankingAppPU").createEntityManager();
        Query schemeId = BankingPUEntityManager.createQuery("SELECT s.id from Schemes s where s.scheme = 'FD'");
        Integer id = (Integer) schemeId.getSingleResult();
        sbSchemeId = id;
        Query queryInterest = BankingPUEntityManager.createNativeQuery("SELECT value FROM configs WHERE parameter='sb.interest'");
        Vector v = (Vector) queryInterest.getSingleResult();
        interest = Double.parseDouble((String) v.get(0));
        interestPercentText.setText(interest + "");

        ActivityByMember am = ActivityByMember.getInstance();
        if (am != null) {
            Members m = am.getMember();
            if (m != null) {
                pkText.setText(m.getUsername());
                pkTextKeyReleased1(null);
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        criteriaCombo = new javax.swing.JComboBox();
        pkText = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        detailsLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        amountText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        interestPercentText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        interestText = new javax.swing.JTextField();
        totalText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        accountsCombo = new javax.swing.JComboBox();
        balanceLabel = new javax.swing.JLabel();

        setClosable(true);
        setResizable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(bankingapp.BankingApp.class).getContext().getResourceMap(FDWithdraw.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        criteriaCombo.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        criteriaCombo.setModel(new DefaultComboBoxModel(UserTypeComboItem.constructMenuItem()));
        criteriaCombo.setName("criteriaCombo"); // NOI18N

        pkText.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        pkText.setName("pkText"); // NOI18N
        pkText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pkTextKeyReleased(evt);
                pkTextKeyReleased1(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(bankingapp.BankingApp.class).getContext().getActionMap(FDWithdraw.class, this);
        jButton1.setAction(actionMap.get("makeWithdraw")); // NOI18N
        jButton1.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        detailsLabel.setName("detailsLabel"); // NOI18N

        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        amountText.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        amountText.setText(resourceMap.getString("amountText.text")); // NOI18N
        amountText.setName("amountText"); // NOI18N
        amountText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                amountTextKeyReleased(evt);
            }
        });

        jLabel3.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        interestPercentText.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        interestPercentText.setText(resourceMap.getString("interestPercentText.text")); // NOI18N
        interestPercentText.setName("interestPercentText"); // NOI18N
        interestPercentText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                interestPercentTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                interestPercentTextKeyReleased(evt);
            }
        });

        jLabel4.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        interestText.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        interestText.setText(resourceMap.getString("interestText.text")); // NOI18N
        interestText.setName("interestText"); // NOI18N
        interestText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                interestTextKeyReleased(evt);
            }
        });

        totalText.setEditable(false);
        totalText.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        totalText.setText(resourceMap.getString("totalText.text")); // NOI18N
        totalText.setName("totalText"); // NOI18N

        jLabel6.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        accountsCombo.setFont(resourceMap.getFont("criteriaCombo.font")); // NOI18N
        accountsCombo.setName("accountsCombo"); // NOI18N

        balanceLabel.setText(resourceMap.getString("balanceLabel.text")); // NOI18N
        balanceLabel.setName("balanceLabel"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(criteriaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(totalText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(interestText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(amountText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pkText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(detailsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(balanceLabel)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(interestPercentText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel4))))))
                    .addComponent(accountsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(criteriaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pkText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(detailsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(balanceLabel)
                    .addComponent(accountsCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(amountText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(interestPercentText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(interestText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void pkTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pkTextKeyReleased
    // TODO add your handling code here:
}//GEN-LAST:event_pkTextKeyReleased

    private void jTextField1KeyPressed(java.awt.event.KeyEvent ke) {

    }

    private void interestPercentTextKeyPressed(java.awt.event.KeyEvent ke) {

    }

    private void pkTextKeyReleased1(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pkTextKeyReleased1
        List l = getUser();
        if (l.size() != 0) {
            jButton1.setEnabled(true);
            Members m = (Members) l.get(0);
            detailsLabel.setText("<html>Username :" + m.getUsername() + " <br /> Membership No. :" + m.getNumber() + " </html>");
            List<Accounts> l1;
            String sql = "SELECT a FROM Accounts a WHERE a.memberId=" + m.getId() + " AND a.schemeId = " + sbSchemeId + " AND a.closed=0 ";
            Query q = BankingPUEntityManager.createQuery(sql);
            l1 = q.getResultList();
            accountsCombo.removeAllItems();
            accountsCombo.setModel(new DefaultComboBoxModel(l1.toArray()));
            balanceLabel.setText("Balance :" + Utils.getFDAccountBalance(((Accounts) accountsCombo.getSelectedItem()).getId()));

        } else {
            accountsCombo.removeAllItems();
            jButton1.setEnabled(false);
            balanceLabel.setText("");
        }
    }//GEN-LAST:event_pkTextKeyReleased1

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

    }//GEN-LAST:event_jButton1ActionPerformed

    private void interestPercentTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_interestPercentTextKeyReleased
        // TODO add your handling code here:
        setInterestText();
    }//GEN-LAST:event_interestPercentTextKeyReleased

    private void amountTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountTextKeyReleased
        // TODO add your handling code here:
        setInterestText();
    }//GEN-LAST:event_amountTextKeyReleased

    private void interestTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_interestTextKeyReleased
        // TODO add your handling code here:
        setTotalText();
    }//GEN-LAST:event_interestTextKeyReleased

    private void setInterestText() {
        double interest1;
        double principle;
        try {
            principle = Double.parseDouble(amountText.getText());
            interest1 = Double.parseDouble(interestPercentText.getText());
        } catch (Exception e) {
            e.printStackTrace();
            return;
        }
        interestText.setText(principle * (interest1 / 100) + "");
        setTotalText();
    }

    private void setTotalText() {
        double interest1;
        double principle;
        try {
            principle = Double.parseDouble(amountText.getText());
            interest1 = Double.parseDouble(interestText.getText());
        } catch (Exception e) {
            e.printStackTrace();
            return;
        }
        totalText.setText(principle + interest1 + "");
    }

    List getUser() {
        Query q = BankingPUEntityManager.createQuery("SELECT m  FROM Members m where m." + ((UserTypeComboItem) criteriaCombo.getSelectedItem()).getColumn() + " = '" + pkText.getText().trim() + "'");
        List l = q.getResultList();
        return l;
    }

    @Action
    public void makeWithdraw() {
        try {
            List l = getUser();
            if (l.size() == 0) {
                JOptionPane.showMessageDialog(this, "Member Not Found !", "Attention", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (accountsCombo.getSelectedIndex() == -1) {
                JOptionPane.showMessageDialog(this, "Account Not Found !", "Attention", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (Double.parseDouble(amountText.getText()) > Utils.getFDAccountBalance(((Accounts) accountsCombo.getSelectedItem()).getId())) {
                JOptionPane.showMessageDialog(this, "No Sufficent Balance !", "Attention", JOptionPane.ERROR_MESSAGE);
                return;
            }
            Transactions t = new Transactions();
            Members m = (Members) l.get(0);
            t.setAccountId(((Accounts) accountsCombo.getSelectedItem()).getId());
            t.setUserId(m.getId());
            t.setWithdrawal(Double.parseDouble(amountText.getText()));
            int ledgerHead = ((LedgerHeads) Utils.getLedgerHead("FD")).getId();
            t.setLledgerHeadId(ledgerHead);
            Transactions tt = new Transactions();

            tt.setAccountId(((Accounts) accountsCombo.getSelectedItem()).getId());
            tt.setUserId(m.getId());
            tt.setWithdrawal(Double.parseDouble(interestText.getText()));
            ledgerHead = ((LedgerHeads) Utils.getLedgerHead("FD Interest")).getId();
            tt.setLledgerHeadId(ledgerHead);

            BankingPUEntityManager.getTransaction().begin();
            BankingPUEntityManager.persist(t);
            BankingPUEntityManager.persist(tt);
            BankingPUEntityManager.getTransaction().commit();
            //System.out.print(ledgerHead);
            JOptionPane.showMessageDialog(this, "Withdrawal Successful", "Done", JOptionPane.INFORMATION_MESSAGE);
            this.setClosed(true);
            int resp = JOptionPane.showConfirmDialog(this, "Do you want to add this to print ?");
            if (resp == JOptionPane.YES_OPTION) {
                String[] p = {"FD ", amountText.getText().trim()};
                PrintDemon.getInstance().payments.add(p);
                String[] p1 = {"FD Interest", amountText.getText().trim()};
                PrintDemon.getInstance().payments.add(p1);
            }
        } catch (PropertyVetoException ex) {
            Logger.getLogger(FDWithdraw.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Please Enter a valid amount !", "Attention", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FDWithdraw.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FDWithdraw.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox accountsCombo;
    private javax.swing.JTextField amountText;
    private javax.swing.JLabel balanceLabel;
    private javax.swing.JComboBox criteriaCombo;
    private javax.swing.JLabel detailsLabel;
    private javax.swing.JTextField interestPercentText;
    private javax.swing.JTextField interestText;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField pkText;
    private javax.swing.JTextField totalText;
    // End of variables declaration//GEN-END:variables
}
